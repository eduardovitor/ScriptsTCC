---

- name: Execute experiments
  hosts: wapiti
  vars:
    report_dir: "~/report_results/"
    wapiti_file_name: "wapiti-3.1.4-bugfix.tar.gz"
    local_wapiti_files_path: "/home/eduardovitor/Downloads"
    wapiti_remote_dir: "wapiti-3.1.4/"
    exp_files_name: "experiment_setup.tar.gz"
    exp_round: 1
    severity_dict_path: owasp_severity_dict_pyformat.txt
    city_dict_path: url_cidade_dict.txt
    max_scan_time: 200
    max_attack_time: 10
  tasks:
    - name: Install Pip
      tags:
        - teste
      ansible.builtin.apt:
        name:
          - python3-pip
        update_cache: true
        state: present
      become: true
    - name: Copy Wapiti files
      tags:
        - teste
      ansible.builtin.copy:
        src: "{{ local_wapiti_files_path }}/{{ wapiti_file_name }}"
        dest: ~/{{ wapiti_file_name }}
        owner: ubuntu
        group: ubuntu
        mode: '0644'
    - name: Extract Wapiti files
      tags:
        - teste
      ansible.builtin.unarchive:
        src: ~/{{ wapiti_file_name }}
        dest: ~/
        remote_src: true
    - name: Install Wapiti
      tags:
        - teste
      ansible.builtin.command: python3 setup.py install
      become: true
      args:
        chdir: "{{ wapiti_remote_dir }}"
      register: my_output
      changed_when: my_output.rc != 0
    - name: Copy experiment files
      tags:
        - teste
      ansible.builtin.copy:
        src: "{{ local_wapiti_files_path }}/{{ exp_files_name }}"
        dest: ~/{{ exp_files_name }}
        owner: ubuntu
        group: ubuntu
        mode: '0644'
    - name: Extract experiment files
      tags:
        - teste
      ansible.builtin.unarchive:
        src: ~/{{ exp_files_name }}
        dest: ~/
        remote_src: true
    - name: Create the exp results dir
      tags:
        - teste
      ansible.builtin.file:
        path: "{{ report_dir }}"
        state: directory
        mode: '0755'
    - name: Run experiments
      tags:
        - run_exp
      ansible.builtin.shell: |
        python3 wapiti_exec.py --exp-round {{ exp_round }} \
        --report-dir {{ report_dir }} --max-scan-time {{ max_scan_time }} \
        --max-attack-time {{ max_attack_time }} --urls-path cidade_{{ my_idx + 1 }} \
        --severity-dict-path {{ severity_dict_path }} --city-dict-path {{ city_dict_path }} > stdout.txt 2>stderr.txt
      args:
        chdir: ~
      delegate_to: "{{ item }}"
      loop: "{{ groups['wapiti'] }}"
      when: inventory_hostname == item
      loop_control:
        index_var: my_idx
    - name: Compress results
      tags:
        - zip
      community.general.files.archive:
        path: "{{ report_dir }}"
        dest: "{{ inventory_hostname }}.zip"
    - name: Copy results to local machine
      tags:
        - copy_res
      ansible.builtin.fetch:
        src: "~/{{ inventory_hostname }}.zip"
        dest: "{{ local_wapiti_files_path }}"
